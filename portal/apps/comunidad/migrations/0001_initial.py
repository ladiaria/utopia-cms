# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-07-22 14:18

import core.utils
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import tagging.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('videologue', '0001_initial'),
        ('photologue', '0011_auto_20190223_2138'),
        ('thedaily', '0004_auto_20210615_1304'),
        ('cartelera', '0001_initial'),
        ('audiologue', '__first__'),
        ('core', '0011_auto_20210722_1418'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='nombre')),
                ('limit', models.PositiveIntegerField(blank=True, null=True, verbose_name='cupo general')),
                ('quota', models.PositiveIntegerField(default=1, verbose_name='cupo por suscriptor')),
            ],
        ),
        migrations.CreateModel(
            name='Circuito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='nombre')),
            ],
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, unique=True, verbose_name='nombre')),
                ('comment', models.TextField(verbose_name='comentario')),
                ('article', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Article')),
            ],
        ),
        migrations.CreateModel(
            name='Registro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used', models.DateTimeField(auto_now_add=True, verbose_name='utilizado')),
                ('benefit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='comunidad.Beneficio', verbose_name='beneficio')),
                ('subscriber', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='thedaily.Subscriber', verbose_name='suscriptor')),
            ],
        ),
        migrations.CreateModel(
            name='Socio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('circuits', models.ManyToManyField(to='comunidad.Circuito', verbose_name='circuitos')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='socio', to=settings.AUTH_USER_MODEL, verbose_name='usuario')),
            ],
        ),
        migrations.CreateModel(
            name='SubscriberArticle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(blank=True, choices=[('NE', 'Noticia'), ('OP', 'Opinión'), ('PA', 'Fotografía'), ('HT', 'HTML'), ('CM', 'COMUNIDAD')], max_length=2, null=True, verbose_name='tipo')),
                ('headline', models.CharField(help_text='Se muestra en la portada y en el artículo.', max_length=200, verbose_name='t\xedtulo')),
                ('keywords', models.CharField(blank=True, help_text='Se muestra encima del t\xedtulo en portada.', max_length=45, null=True, verbose_name='titul\xedn')),
                ('slug', models.SlugField(max_length=200, verbose_name='slug')),
                ('url_path', models.CharField(db_index=True, max_length=512)),
                ('deck', models.TextField(blank=True, help_text='Se muestra en la p\xe1gina del artículo debajo del t\xedtulo.', null=True, verbose_name='bajada')),
                ('lead', models.TextField(blank=True, help_text='Se muestra en la p\xe1gina del artículo debajo de la bajada.', null=True, verbose_name='copete')),
                ('body', models.TextField(verbose_name='cuerpo')),
                ('header_display', models.CharField(blank=True, choices=[('FW', 'Ancho completo'), ('BG', 'Grande')], default='BG', max_length=2, null=True, verbose_name='tipo de cabezal')),
                ('home_header_display', models.CharField(blank=True, choices=[('FW', 'Ancho completo'), ('FF', 'Medio y medio'), ('SM', 'Chico')], default='SM', max_length=2, null=True, verbose_name='tipo de cabezal cuando es portada')),
                ('home_lead', models.TextField(blank=True, help_text='Bajada del artículo en portada.', null=True, verbose_name='bajada en portada')),
                ('home_display', models.CharField(blank=True, choices=[('I', 'Imagen'), ('A', 'Audio'), ('V', 'Video')], max_length=2, null=True, verbose_name='mostrar en portada')),
                ('home_top_deck', models.TextField(blank=True, help_text='Se muestra en los destacados de la portada, en el caso de estar vaci\xf3 se muestra la bajada del artículo.', null=True, verbose_name='bajada en destacados')),
                ('only_initials', models.BooleanField(default=False, help_text='Marque esta opci\xf3n para que en la firma del art\xedculo se muestren \xfanicamente las iniciales del autor.', verbose_name='s\xf3lo iniciales')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='latitud')),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True, verbose_name='longitud')),
                ('is_published', models.BooleanField(default=True, verbose_name='publicado')),
                ('date_published', models.DateTimeField(default=django.utils.timezone.now, verbose_name='fecha de publicaci\xf3n')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creaci\xf3n')),
                ('last_modified', models.DateTimeField(auto_now=True, verbose_name='\xfaltima actualizaci\xf3n')),
                ('views', models.PositiveIntegerField(db_index=True, default=0, verbose_name='vistas')),
                ('allow_comments', models.BooleanField(default=True, verbose_name='Habilitar comentarios')),
                ('tags', tagging.fields.TagField(blank=True, max_length=255, null=True, verbose_name='etiquetas')),
                ('allow_related', models.BooleanField(db_index=True, default=True, verbose_name='mostrar en art\xedculos relacionados')),
                ('show_related_articles', models.BooleanField(default=True, verbose_name='mostrar art\xedculos relacionados dentro de este art\xedculo')),
                ('public', models.BooleanField(default=False, verbose_name='Art\xedculo libre')),
                ('rating_likes', models.PositiveIntegerField(blank=True, default=0, editable=False)),
                ('rating_dislikes', models.PositiveIntegerField(blank=True, default=0, editable=False)),
                ('audio', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles_comunidad', to='audiologue.Audio', verbose_name='audio')),
                ('byline', models.ManyToManyField(blank=True, related_name='articles_comunidad', to='core.Journalist', verbose_name='autor/es')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_articles_comunidad', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
                ('gallery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='photologue.Gallery', verbose_name='galer\xeda')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles_comunidad', to='core.Location', verbose_name='ubicaci\xf3n')),
                ('photo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='photologue.Photo', verbose_name='imagen')),
                ('publication', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles_comunidad', to='core.Publication', verbose_name='publicaci\xf3n')),
                ('video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='articles_comunidad', to='videologue.Video', verbose_name='video')),
                ('youtube_video', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='videologue.YouTubeVideo', verbose_name='video de YouTube')),
            ],
            options={
                'get_latest_by': 'date_published',
                'ordering': ('-date_published',),
                'abstract': False,
                'verbose_name_plural': 'art\xedculos',
                'verbose_name': 'art\xedculo',
            },
            bases=(models.Model, core.utils.CT),
            managers=[
                ('published', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='SubscriberEvento',
            fields=[
                ('eventobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cartelera.EventoBase')),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de creaci\xf3n')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_creados', to=settings.AUTH_USER_MODEL, verbose_name='creado por')),
            ],
            bases=('cartelera.eventobase',),
        ),
        migrations.CreateModel(
            name='TopUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField()),
                ('date_created', models.DateTimeField(auto_now_add=True, verbose_name='fecha de calculo')),
                ('type', models.CharField(choices=[('WEEK', 'WEEK'), ('MONTH', 'MONTH'), ('YEAR', 'YEAR')], max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Url',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
            ],
        ),
        migrations.AddField(
            model_name='recommendation',
            name='urls',
            field=models.ManyToManyField(to='comunidad.Url'),
        ),
        migrations.AddField(
            model_name='beneficio',
            name='circuit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficios', to='comunidad.Circuito', verbose_name='circuito'),
        ),
        migrations.AlterUniqueTogether(
            name='beneficio',
            unique_together=set([('name', 'circuit')]),
        ),
    ]
