# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2021-01-28 01:13

import core.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ArchivedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_type', models.CharField(choices=[('f', 'Gratuito'), ('s', 'Para suscripciones pagas')], default=b's', max_length=1, verbose_name='acceso al evento')),
                ('title', models.CharField(max_length=255, verbose_name='t\xedtulo')),
                ('embed_content', models.TextField(blank=True, null=True, verbose_name='contenido incrustado')),
            ],
            options={
                'verbose_name': 'evento archivado',
                'verbose_name_plural': 'eventos archivados',
            },
        ),
        migrations.CreateModel(
            name='CategoriaEvento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'nombre')),
                ('order', models.PositiveSmallIntegerField(default=0, verbose_name='orden en cartelera')),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Cine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'nombre')),
                ('slug', models.SlugField()),
                ('address', models.TextField(blank=True, null=True, verbose_name=b'direcci\xc3\xb3n')),
                ('phones', models.CharField(max_length=250, verbose_name=b'telefonos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventoBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name=b'titulo')),
                ('description', models.TextField(blank=True, null=True, verbose_name=b'descripci\xc3\xb3n')),
                ('slug', models.SlugField()),
                ('start', models.DateTimeField(verbose_name=b'comienzo')),
                ('end', models.DateTimeField(verbose_name=b'fin')),
                ('precio', models.CharField(max_length=250, verbose_name=b'precio')),
                ('poster', models.ImageField(blank=True, null=True, upload_to=b'cartelera/posters')),
                ('type', models.CharField(max_length=250)),
            ],
            bases=(models.Model, core.utils.CT),
        ),
        migrations.CreateModel(
            name='LiveEmbedEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False, verbose_name='activo')),
                ('access_type', models.CharField(choices=[('f', 'Gratuito'), ('s', 'Para suscripciones pagas')], default=b's', max_length=1, verbose_name='acceso al evento')),
                ('in_home', models.BooleanField(default=False, verbose_name='agregar a portada')),
                ('notification', models.BooleanField(default=False, verbose_name='mostrar notificaci\xf3n en art\xedculos')),
                ('notification_text', models.CharField(blank=True, max_length=255, null=True, verbose_name='texto')),
                ('notification_url', models.URLField(blank=True, null=True, verbose_name='url')),
                ('title', models.CharField(max_length=255, verbose_name='t\xedtulo')),
                ('embed_content', models.TextField(blank=True, null=True, verbose_name='contenido incrustado')),
                ('embed_chat', models.TextField(blank=True, null=True, verbose_name='chat incrustado')),
            ],
            options={
                'verbose_name': 'evento en vivo',
                'verbose_name_plural': 'eventos en vivo',
            },
        ),
        migrations.CreateModel(
            name='ObraEnTeatro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horarios', models.TextField(blank=True, null=True, verbose_name=b'horarios')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PeliculaEnCine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('horarios', models.TextField(blank=True, null=True, verbose_name=b'horarios')),
                ('cine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='cartelera.Cine')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Teatro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(blank=True, max_length=100, null=True, verbose_name=b'nombre')),
                ('slug', models.SlugField()),
                ('address', models.TextField(blank=True, null=True, verbose_name=b'direcci\xc3\xb3n')),
                ('phones', models.CharField(max_length=250, verbose_name=b'telefonos')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('eventobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cartelera.EventoBase')),
            ],
            bases=('cartelera.eventobase',),
        ),
        migrations.CreateModel(
            name='ObraTeatro',
            fields=[
                ('eventobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cartelera.EventoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('cartelera.eventobase', models.Model),
        ),
        migrations.CreateModel(
            name='Pelicula',
            fields=[
                ('eventobase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='cartelera.EventoBase')),
            ],
            options={
                'abstract': False,
            },
            bases=('cartelera.eventobase', models.Model),
        ),
        migrations.AddField(
            model_name='obraenteatro',
            name='teatro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='cartelera.Teatro'),
        ),
        migrations.AddField(
            model_name='eventobase',
            name='categoria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cartelera.CategoriaEvento'),
        ),
        migrations.AddField(
            model_name='peliculaencine',
            name='pelicula',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='cartelera.Pelicula'),
        ),
        migrations.AddField(
            model_name='obraenteatro',
            name='obra',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios', to='cartelera.ObraTeatro'),
        ),
    ]
